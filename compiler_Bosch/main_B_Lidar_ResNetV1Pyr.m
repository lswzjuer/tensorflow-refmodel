%Generated by Gen_MATLAB_CNNs_param.py

clear
clc

% % % workspace = getenv("WORKSPACE");
% % % global matlab_export_dir = strcat(workspace,"/verif/sim/");
% % % jsonlab_path = strcat(workspace,"/verif/compiler/utils/jsonlab-1.5");
% % % addpath(jsonlab_path);
% % % function r = write_json(filename, structure)
% % %     global matlab_export_dir;
% % %     filepath = strcat(matlab_export_dir,filename);
% % %     fidr = fopen(filepath,'w');
% % %     json_str = savejson('',structure);
% % %     fprintf(fidr,"%s", json_str);
% % %     fclose(fidr);
% % %     r=1;
% % % end


%% *************************************************************** CNN model parameters ***************************************************************
% Generated by Gen_MATLAB_DLA_param.py
% use: models/caffe_model_8bit/DLA2.0_lidar_chips_quantity.prototxt

NUM_CONV = 74; % CONV includes normal convolution and depthwise convolution
NUM_DECV = 0; % DEConVolution (deconv) or transposed convolution
NUM_NEAR = 2; % Nearest-neighbor interpolation
NUM_PLMX = 3; % PooLing MaX layer
NUM_GAPL = 0; % Global AVerage Pooling layer
NUM_ROIP = 0; % ROIPooling layer
NUM_PROP = 0; % PROPosal layer
NUM_EWIS = 16; % Element-WISe layer
NUM_FCON = 0; % Fully-CONnected layer
NUM_LAYER = NUM_CONV+NUM_DECV+NUM_NEAR+NUM_PLMX+NUM_GAPL+NUM_ROIP+NUM_PROP+NUM_EWIS+NUM_FCON;

%             1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,
NKX_CONV  = [ 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 1, 5, 1, 1, 1, 5, 1, 1, 5, 1, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 3, 1, 3, 3, 1,]';
NKY_CONV  = [ 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 1, 5, 1, 1, 1, 5, 1, 1, 5, 1, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 3, 1, 3, 3, 1,]';
PAD_CONV  = [ 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,]';
STR_CONV  = [ 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,]';
NKI_CONV0 = [ 8,32,32,64,32,32,64,256,32,32,256,32,32,256,128,128,256,512,64,64,512,64,64,512,64,64,512,512,256,256,512,1024,128,128,1024,128,128,1024,1024,128,128,1024,1024,128,128,1024,128,128,1024,256,128,256,64,64,64,64,64,64,128,128,64,128,256,128,64,64,64,64,128,128,128,256,128,128,]'; % # of input kernel maps
NIF_CONV0 = [ 8,32,32,64,32,32,64,256,32,32,256,32,32,256,128,128,256,512,64,64,512,64,64,512,64,64,512,512,256,256,512,1024,128,128,1024,128,128,1024,1024,128,128,1024,1024,128,128,1024,128,128,1024,256,128,256,64,64,64,64,64,64,128,128,64,128,256,128,64,64,64,64,128,128,128,256,128,128,]';
NOF_CONV0 = [32,32,64,32,32,256,256,32,32,256,32,32,256,128,128,512,512,64,64,512,64,64,512,64,64,512,128,256,256,1024,1024,128,128,1024,128,128,1024,256,128,128,1024,1024,128,128,1024,128,128,1024,256,128,64,64,64,64,64,64, 4,128,128,64, 4,256,128,64, 4,64,64,28,128,128,28,128,128,28,]';
NIX_CONV0 = [800,400,400,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,100,200,200,200,200,200,200,100,100,100,100,50,50,50,50,200,200,200,100,100,100,50,50,50,]';
NIY_CONV0 = [1088,544,544,272,272,272,272,272,272,272,272,272,272,136,136,136,136,136,136,136,136,136,136,136,136,136,136,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,136,272,272,272,272,272,272,136,136,136,136,68,68,68,68,272,272,272,136,136,136,68,68,68,]';
NOX_CONV0 = [400,400,400,200,200,200,200,200,200,200,200,200,200,100,100,100,100,100,100,100,100,100,100,100,100,100,100,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,100,200,200,200,200,200,200,100,100,100,100,50,50,50,50,200,200,200,100,100,100,50,50,50,]';
NOY_CONV0 = [544,544,544,272,272,272,272,272,272,272,272,272,272,136,136,136,136,136,136,136,136,136,136,136,136,136,136,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,136,272,272,272,272,272,272,136,136,136,136,68,68,68,68,272,272,272,136,136,136,68,68,68,]';

NKX_DECV  = []';
NKY_DECV  = []';
PAD_DECV  = []';
STR_DECV  = []'; % Deconv stride (Internal Zero Padding Size) 
NKI_DECV0 = []';
NIF_DECV0 = []';
NOF_DECV0 = []';
NIX_DECV0 = []';
NIY_DECV0 = []';
NOX_DECV0 = []';
NOY_DECV0 = []';

STR_NEAR  = [ 2, 2,]';
NIF_NEAR0 = [128,64,]';
NOF_NEAR0 = [128,64,]';
NIX_NEAR0 = [50,100,]';
NIY_NEAR0 = [68,136,]';
NOX_NEAR0 = [100,200,]';
NOY_NEAR0 = [136,272,]';

NKX_PLMX  = [ 3, 3, 3,]';
NKY_PLMX  = [ 3, 3, 3,]';
PAD_PLMX  = [ 0, 0, 0,]';
STR_PLMX  = [ 2, 2, 2,]';
NIF_PLMX0 = [64,256,512,]';
NOF_PLMX0 = [64,256,512,]'; 
NIX_PLMX0 = [400,200,100,]';
NIY_PLMX0 = [544,272,136,]';
NOX_PLMX0 = [200,100,50,]';
NOY_PLMX0 = [272,136,68,]';

NOX_ROIP0 = []';
NOY_ROIP0 = []';
NOF_ROIP0 = []';
NBX_ROIP0 = []'; % # of ROIs or anchor boxes


WD_DIV = 16;
NKX_GAPL  = []';
NKY_GAPL  = []';
NIX_GAPL0 = []';
NIY_GAPL0 = []';
NIF_GAPL0 = []';
NOF_GAPL0 = []';

NIF_EWIS0 = [512,512,512,1024,1024,1024,1024,2048,2048,2048,2048,2048,2048,512,256,128,]';
NOF_EWIS0 = [256,256,256,512,512,512,512,1024,1024,1024,1024,1024,1024,256,128,64,]';
NIX_EWIS0 = [200,200,200,100,100,100,100,50,50,50,50,50,50,50,100,200,]';
NIY_EWIS0 = [272,272,272,136,136,136,136,68,68,68,68,68,68,68,136,272,]';
NOX_EWIS0 = [200,200,200,100,100,100,100,50,50,50,50,50,50,50,100,200,]';
NOY_EWIS0 = [272,272,272,136,136,136,136,68,68,68,68,68,68,68,136,272,]';

NIF_FCON0 = []'; % Warning check NIF of 1st FCON
NOF_FCON0 = []';
NBX_FCON0 = []'; % # of ROIs or anchor boxes


%                    1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,
CR_LAYER_IS_CONV = [ 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,];
CR_LAYER_IS_DECV = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_NEAR = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_PLMX = [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_ROIP = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_PROP = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_GAPL = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_EWIS = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];
CR_LAYER_IS_FCON = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];

CR_LAYER_IS_DWIS = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];

CR_CONV_with_ReLU = [1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,0]';
CR_EWIS_with_ReLU = [1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]';
CR_FCON_with_ReLU = []';
CR_CONV_with_Bias = ones(NUM_CONV,1);
CR_FCON_with_Bias = ones(NUM_FCON,1);

CR_CONV_MACOUT_RSBIT_CV = [ 8, 9, 7, 8,10, 8, 8,10, 9, 7,10, 9, 8,10, 9, 9, 9,10,10, 8,10, 9, 8,10, 9, 7,11, 8,11,11,11, 9,10,10, 8,11,10,12,10, 9, 9,10,10,10, 8,10, 9, 8,11,12,12,11,11, 9, 9, 8, 9,10, 9, 7,11,11,10, 8,12, 9, 8, 7, 9, 5, 9, 9, 9, 8]';
CR_DECV_MACOUT_RSBIT_CV = 7*ones(NUM_DECV,1);
CR_FCON_MACOUT_RSBIT_FC = 7*ones(NUM_FCON,1); % FCON MAC output right shift bits


% Support MAX number of input layers of 16! 
input_layers_ID{001} = [0,]; % Assume 1st layer only read from image
input_layers_ID{002} = [1,];
input_layers_ID{003} = [2,];
input_layers_ID{004} = [3,];
input_layers_ID{005} = [4,];
input_layers_ID{006} = [5,];
input_layers_ID{007} = [6,];
input_layers_ID{008} = [4,];
input_layers_ID{009} = [7,8,];
input_layers_ID{010} = [9,];
input_layers_ID{011} = [10,];
input_layers_ID{012} = [11,];
input_layers_ID{013} = [12,9,];
input_layers_ID{014} = [13,];
input_layers_ID{015} = [14,];
input_layers_ID{016} = [15,];
input_layers_ID{017} = [16,13,];
input_layers_ID{018} = [17,];
input_layers_ID{019} = [18,];
input_layers_ID{020} = [19,];
input_layers_ID{021} = [20,];
input_layers_ID{022} = [18,];
input_layers_ID{023} = [21,22,];
input_layers_ID{024} = [23,];
input_layers_ID{025} = [24,];
input_layers_ID{026} = [25,];
input_layers_ID{027} = [26,23,];
input_layers_ID{028} = [27,];
input_layers_ID{029} = [28,];
input_layers_ID{030} = [29,];
input_layers_ID{031} = [30,27,];
input_layers_ID{032} = [31,];
input_layers_ID{033} = [32,];
input_layers_ID{034} = [33,];
input_layers_ID{035} = [34,31,];
input_layers_ID{036} = [35,];
input_layers_ID{037} = [35,];
input_layers_ID{038} = [37,];
input_layers_ID{039} = [38,];
input_layers_ID{040} = [39,];
input_layers_ID{041} = [37,];
input_layers_ID{042} = [40,41,];
input_layers_ID{043} = [42,];
input_layers_ID{044} = [43,];
input_layers_ID{045} = [44,];
input_layers_ID{046} = [45,42,];
input_layers_ID{047} = [46,];
input_layers_ID{048} = [47,];
input_layers_ID{049} = [48,];
input_layers_ID{050} = [49,46,];
input_layers_ID{051} = [50,];
input_layers_ID{052} = [50,];
input_layers_ID{053} = [52,];
input_layers_ID{054} = [53,];
input_layers_ID{055} = [50,];
input_layers_ID{056} = [54,55,];
input_layers_ID{057} = [56,];
input_layers_ID{058} = [57,];
input_layers_ID{059} = [58,];
input_layers_ID{060} = [59,56,];
input_layers_ID{061} = [60,];
input_layers_ID{062} = [61,];
input_layers_ID{063} = [62,];
input_layers_ID{064} = [63,60,];
input_layers_ID{065} = [64,];
input_layers_ID{066} = [51,65,];
input_layers_ID{067} = [66,];
input_layers_ID{068} = [67,];
input_layers_ID{069} = [36,68,];
input_layers_ID{070} = [69,];
input_layers_ID{071} = [70,];
input_layers_ID{072} = [17,];
input_layers_ID{073} = [71,72,];
input_layers_ID{074} = [73,];
input_layers_ID{075} = [74,];
input_layers_ID{076} = [75,];
input_layers_ID{077} = [76,];
input_layers_ID{078} = [77,];
input_layers_ID{079} = [70,];
input_layers_ID{080} = [79,];
input_layers_ID{081} = [80,];
input_layers_ID{082} = [81,];
input_layers_ID{083} = [67,];
input_layers_ID{084} = [83,];
input_layers_ID{085} = [84,];
input_layers_ID{086} = [85,];
input_layers_ID{087} = [75,];
input_layers_ID{088} = [87,];
input_layers_ID{089} = [88,];
input_layers_ID{090} = [79,];
input_layers_ID{091} = [90,];
input_layers_ID{092} = [91,];
input_layers_ID{093} = [83,];
input_layers_ID{094} = [93,];
input_layers_ID{095} = [94,];



% ------------------------------ PROP parameters ------------------------------
BIT_frac_ANCHOR      = 4;
num_anchors          = 0*ones(NUM_PROP,1);
CR_PROP_ANCHOR_CTR_X = 4.5*2^BIT_frac_ANCHOR*ones(NUM_PROP,1); % 16-bit
CR_PROP_ANCHOR_CTR_Y = 4.5*2^BIT_frac_ANCHOR*ones(NUM_PROP,1); % 16-bit
CR_PROP_ANCHOR_W     = zeros(NUM_PROP,64);     % 64*16-bit
CR_PROP_ANCHOR_H     = zeros(NUM_PROP,64);     % 64*16-bit
%CR_PROP_ANCHOR_W(1,1:num_anchors(1)) = [  9, 18, 36, 54, 96,192,288, 10, 21, 42, 63,112,224,336, 12, 24, 48, 72,128,256,384, 15, 30, 60, 90,160,320,480, 18, 36, 72,108,192,384,576, 21, 42, 84,126,224,448,672, 27, 54,108,162,288,576,864]*2^BIT_frac_ANCHOR;
%CR_PROP_ANCHOR_H(1,1:num_anchors(1)) = [ 25, 51,102,153,272,544,816, 21, 42, 84,126,224,448,672, 18, 36, 72,108,192,384,576, 15, 30, 60, 90,160,320,480, 12, 24, 48, 72,128,256,384, 10, 21, 42, 63,112,224,336,  9, 18, 36, 54, 96,192,288]*2^BIT_frac_ANCHOR;
% ------------------------------ PROP parameters ------------------------------



%% *************************************************************** Loop Tiling Sizes for On-chip Buffer ***************************************************************

            % 01; 02; 03; 04; 05; 06; 07; 08; 09; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62; 63; 64; 65; 66; 67; 68; 69; 70; 71; 72; 73; 74;75;76;77;78; 79; 80; 81; 82; 83; 84; 85; 86;
%NOY_CONV0= [544,544,544,272,272,272,272,272,272,272,272,272,272,136,136,136,136,136,136,136,136,136,136,136,136,136,136,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,136,272,272,272,272,272,272,136,136,136,136,68,68,68,68,272,272,272,136,136,136,68,68,68,]';
%Toy_CONV0= [ 32, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8, 8,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,136,272,272,272,272,272,272,136,136,136,136,68,68,68,68,272,272,272,136,136,136,68,68,68,]';
Toy_CONV0  = 8*ones(NUM_CONV,1);
Toy_CONV0 = min(Toy_CONV0, NOY_CONV0);

            % 01;02;03;04;05; 06; 07;08;09; 10;11;12; 13; 14; 15; 16; 17;18;19; 20;21;22; 23;24;25; 26; 27; 28; 29;  30; 31; 3 2; 33;  34; 35; 36; 37;  38; 39; 40;  41;  42; 43; 44;  45; 46; 47;  48; 49; 50;51;52;53;54;55;56;57; 58; 59;60;61; 62; 63;64;65;66;67;68; 69; 70;71; 72; 73;74;
%NOF_CONV0 = [32,32,64,32,32,256,256,32,32,256,32,32,256,128,128,512,512,64,64,512,64,64,512,64,64,512,128,256,256,1024,1024,128,128,1024,128,128,1024,256,128,128,1024,1024,128,128,1024,128,128,1024,256,128,64,64,64,64,64,64, 4,128,128,64, 4,256,128,64, 4,64,64,28,128,128,28,128,128,28,]';
Tof_CONV0  = [32,32,32,32,32,256,256,32,32,256,32,32,256,128,128,512,512,64,64,512,64,64,512,64,64,512,128,256, 64,1024, 512,128,128,1024,128,128,1024,256,128, 64,1024, 512,128, 64,1024,128, 64,1024,256,128,64,64,64,64,64,64, 4,128,128,64, 4,256,128,64, 4,64,64,28,128,128,28,128,128,28,]';
%Tof_CONV0 = 32*ones(NUM_CONV,1);
Tof_CONV0 = min(Tof_CONV0, NOF_CONV0);

Toy_DECV0 = [];
Tof_DECV0 = [];

Toy_NEAR = NOY_NEAR0/4;
Tif_NEAR = [16,16]';

Tif_PLMX = [ 8;  8;16;]; % if FCON is after PLMX, Tif_PL = NIF_PL % NIF_PL0 = [96;192;96;];
Toy_PLMX = [68;136;68;]; % NOTE, for stride=1, pad=1 pooling, TOY_PL = NOY_PL

%NOY_EWIS0= [272,272,272,136,136,136,136,68,68,68,68,68,68,68,136,272,]';
Toy_EWIS  = [ 02; 02; 02; 02; 02; 02; 02;02;02;02;02;02;02;02; 02; 02];

Tif_GAPL = [];
Tof_GAPL = Tif_GAPL;

Tif_PROP = []; 
Toy_PROP = [];

Tof_ROIP = [32;]; 

NUM_FC_BOX = 64; % # of parallel computed boxes for FCON
Tbx_FCON = [];
Tif_FCON = NIF_FCON0; %Tof_FCON = POF_FCON;


%%
run ./CNN_compiler/DLA_size_x16y08f16.m
run ./CNN_compiler/Variants.m
run ./CNN_compiler/DMA_dpt_NoAlign.m % run 1st
run ./CNN_compiler/Param.m % run 2nd
run ./CNN_compiler/Param_LAYER.m % generate LAYER based configuration parameters
run ./CNN_compiler/Performance_Bosch.m
run ./CNN_compiler/csv_layer.m

% % % run ./CNN_compiler/cnn_emu_api.m

% save ("DDR3_BDEC_WRPX_pCVpM","DDR3_BDEC_WRPX_pCVpM");
% save ("DDR3_BDEC_WRPX_pPLpM","DDR3_BDEC_WRPX_pPLpM");
% save ("./CNN_compiler/DDR3_BDEC_WRPX_pCVpM","DDR3_BDEC_WRPX_pCVpM");
% save ("./CNN_compiler/DDR3_BDEC_WRPX_pPLpM","DDR3_BDEC_WRPX_pPLpM");

% load('./CNN_compiler/PVANET_ob_KN_BS_INT.mat')
% load('./CNN_compiler/FT_data_6images.mat')

%run ./CNN_compiler/Bias_Kernel_Image_sim.m

% run ./CNN_compiler/RAM_init.m

close('all')


%% ************************* Layer Information *************************
% LiDAR pre-processing to generate bev_map
% Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz
% with 101,384 cloud points, it takes 10-12 ms 
% with 213,402 cloud points, it takes 14-15 ms

% LAYER(001) is CONV(001), resnetv1pyr1_hybridsequential0_conv0_fwd
% LAYER(002) is CONV(002), resnetv1pyr1_hybridsequential1_conv0_fwd
% LAYER(003) is CONV(003), resnetv1pyr1_hybridsequential2_conv0_fwd
% LAYER(004) is PLMX(001), resnetv1pyr1_pool0_fwd
% LAYER(005) is CONV(004), resnetv1pyr1_stage_4bottleneckv10_hybridsequential0_conv0_fwd
% LAYER(006) is CONV(005), resnetv1pyr1_stage_4bottleneckv10_hybridsequential1_conv0_fwd
% LAYER(007) is CONV(006), resnetv1pyr1_stage_4bottleneckv10_hybridsequential2_conv0_fwd
% LAYER(008) is CONV(007), resnetv1pyr1_stage_4_shortcuthybridsequential0_conv0_fwd
% LAYER(009) is EWIS(001), resnetv1pyr1_stage_4bottleneckv10__plus0
% LAYER(010) is CONV(008), resnetv1pyr1_stage_4bottleneckv11_hybridsequential0_conv0_fwd
% LAYER(011) is CONV(009), resnetv1pyr1_stage_4bottleneckv11_hybridsequential1_conv0_fwd
% LAYER(012) is CONV(010), resnetv1pyr1_stage_4bottleneckv11_hybridsequential2_conv0_fwd
% LAYER(013) is EWIS(002), resnetv1pyr1_stage_4bottleneckv11__plus0
% LAYER(014) is CONV(011), resnetv1pyr1_stage_4bottleneckv12_hybridsequential0_conv0_fwd
% LAYER(015) is CONV(012), resnetv1pyr1_stage_4bottleneckv12_hybridsequential1_conv0_fwd
% LAYER(016) is CONV(013), resnetv1pyr1_stage_4bottleneckv12_hybridsequential2_conv0_fwd
% LAYER(017) is EWIS(003), resnetv1pyr1_stage_4bottleneckv12__plus0
% LAYER(018) is PLMX(002), resnetv1pyr1_pool1_fwd
% LAYER(019) is CONV(014), resnetv1pyr1_stage_8bottleneckv10_hybridsequential0_conv0_fwd
% LAYER(020) is CONV(015), resnetv1pyr1_stage_8bottleneckv10_hybridsequential1_conv0_fwd
% LAYER(021) is CONV(016), resnetv1pyr1_stage_8bottleneckv10_hybridsequential2_conv0_fwd
% LAYER(022) is CONV(017), resnetv1pyr1_stage_8_shortcuthybridsequential0_conv0_fwd
% LAYER(023) is EWIS(004), resnetv1pyr1_stage_8bottleneckv10__plus0
% LAYER(024) is CONV(018), resnetv1pyr1_stage_8bottleneckv11_hybridsequential0_conv0_fwd
% LAYER(025) is CONV(019), resnetv1pyr1_stage_8bottleneckv11_hybridsequential1_conv0_fwd
% LAYER(026) is CONV(020), resnetv1pyr1_stage_8bottleneckv11_hybridsequential2_conv0_fwd
% LAYER(027) is EWIS(005), resnetv1pyr1_stage_8bottleneckv11__plus0
% LAYER(028) is CONV(021), resnetv1pyr1_stage_8bottleneckv12_hybridsequential0_conv0_fwd
% LAYER(029) is CONV(022), resnetv1pyr1_stage_8bottleneckv12_hybridsequential1_conv0_fwd
% LAYER(030) is CONV(023), resnetv1pyr1_stage_8bottleneckv12_hybridsequential2_conv0_fwd
% LAYER(031) is EWIS(006), resnetv1pyr1_stage_8bottleneckv12__plus0
% LAYER(032) is CONV(024), resnetv1pyr1_stage_8bottleneckv13_hybridsequential0_conv0_fwd
% LAYER(033) is CONV(025), resnetv1pyr1_stage_8bottleneckv13_hybridsequential1_conv0_fwd
% LAYER(034) is CONV(026), resnetv1pyr1_stage_8bottleneckv13_hybridsequential2_conv0_fwd
% LAYER(035) is EWIS(007), resnetv1pyr1_stage_8bottleneckv13__plus0
% LAYER(036) is CONV(027), resnetv1pyr1_hybridsequential6_conv0_fwd
% LAYER(037) is PLMX(003), resnetv1pyr1_pool2_fwd
% LAYER(038) is CONV(028), resnetv1pyr1_stage_16bottleneckv10_hybridsequential0_conv0_fwd
% LAYER(039) is CONV(029), resnetv1pyr1_stage_16bottleneckv10_hybridsequential1_conv0_fwd
% LAYER(040) is CONV(030), resnetv1pyr1_stage_16bottleneckv10_hybridsequential2_conv0_fwd
% LAYER(041) is CONV(031), resnetv1pyr1_stage_16_shortcuthybridsequential0_conv0_fwd
% LAYER(042) is EWIS(008), resnetv1pyr1_stage_16bottleneckv10__plus0
% LAYER(043) is CONV(032), resnetv1pyr1_stage_16bottleneckv11_hybridsequential0_conv0_fwd
% LAYER(044) is CONV(033), resnetv1pyr1_stage_16bottleneckv11_hybridsequential1_conv0_fwd
% LAYER(045) is CONV(034), resnetv1pyr1_stage_16bottleneckv11_hybridsequential2_conv0_fwd
% LAYER(046) is EWIS(009), resnetv1pyr1_stage_16bottleneckv11__plus0
% LAYER(047) is CONV(035), resnetv1pyr1_stage_16bottleneckv12_hybridsequential0_conv0_fwd
% LAYER(048) is CONV(036), resnetv1pyr1_stage_16bottleneckv12_hybridsequential1_conv0_fwd
% LAYER(049) is CONV(037), resnetv1pyr1_stage_16bottleneckv12_hybridsequential2_conv0_fwd
% LAYER(050) is EWIS(010), resnetv1pyr1_stage_16bottleneckv12__plus0
% LAYER(051) is CONV(038), resnetv1pyr1_hybridsequential4_conv0_fwd
% LAYER(052) is CONV(039), resnetv1pyr1_stage_16_dbottleneckv10_hybridsequential0_conv0_fwd
% LAYER(053) is CONV(040), resnetv1pyr1_stage_16_dbottleneckv10_hybridsequential1_conv0_fwd
% LAYER(054) is CONV(041), resnetv1pyr1_stage_16_dbottleneckv10_hybridsequential2_conv0_fwd
% LAYER(055) is CONV(042), resnetv1pyr1_stage_16_d_shortcuthybridsequential0_conv0_fwd
% LAYER(056) is EWIS(011), resnetv1pyr1_stage_16_dbottleneckv10__plus0
% LAYER(057) is CONV(043), resnetv1pyr1_stage_16_dbottleneckv11_hybridsequential0_conv0_fwd
% LAYER(058) is CONV(044), resnetv1pyr1_stage_16_dbottleneckv11_hybridsequential1_conv0_fwd
% LAYER(059) is CONV(045), resnetv1pyr1_stage_16_dbottleneckv11_hybridsequential2_conv0_fwd
% LAYER(060) is EWIS(012), resnetv1pyr1_stage_16_dbottleneckv11__plus0
% LAYER(061) is CONV(046), resnetv1pyr1_stage_16_dbottleneckv12_hybridsequential0_conv0_fwd
% LAYER(062) is CONV(047), resnetv1pyr1_stage_16_dbottleneckv12_hybridsequential1_conv0_fwd
% LAYER(063) is CONV(048), resnetv1pyr1_stage_16_dbottleneckv12_hybridsequential2_conv0_fwd
% LAYER(064) is EWIS(013), resnetv1pyr1_stage_16_dbottleneckv12__plus0
% LAYER(065) is CONV(049), resnetv1pyr1_hybridsequential3_conv0_fwd
% LAYER(066) is EWIS(014), resnetv1pyr1__plus0
% LAYER(067) is CONV(050), resnetv1pyr1_hybridsequential5_conv0_fwd
% LAYER(068) is NEAR(001), resnetv1pyr1_upsampling0
% LAYER(069) is EWIS(015), resnetv1pyr1__plus1
% LAYER(070) is CONV(051), resnetv1pyr1_hybridsequential7_conv0_fwd
% LAYER(071) is NEAR(002), resnetv1pyr1_upsampling1
% LAYER(072) is CONV(052), resnetv1pyr1_hybridsequential8_conv0_fwd
% LAYER(073) is EWIS(016), resnetv1pyr1__plus2
% LAYER(074) is CONV(053), resnetv1pyr1_hybridsequential9_conv0_fwd
% LAYER(075) is CONV(054), resnetv1pyr1_share_head_4hybridsequential0_conv0_fwd
% LAYER(076) is CONV(055), resnetv1pyr1_cls_head_4hybridsequential0_conv0_fwd
% LAYER(077) is CONV(056), resnetv1pyr1_cls_head_4hybridsequential1_conv0_fwd
% LAYER(078) is CONV(057), resnetv1pyr1_cls_head_4hybridsequential2_conv0_fwd
% LAYER(079) is CONV(058), resnetv1pyr1_share_head_8hybridsequential0_conv0_fwd
% LAYER(080) is CONV(059), resnetv1pyr1_cls_head_8hybridsequential0_conv0_fwd
% LAYER(081) is CONV(060), resnetv1pyr1_cls_head_8hybridsequential1_conv0_fwd
% LAYER(082) is CONV(061), resnetv1pyr1_cls_head_8hybridsequential2_conv0_fwd
% LAYER(083) is CONV(062), resnetv1pyr1_share_head_16hybridsequential0_conv0_fwd
% LAYER(084) is CONV(063), resnetv1pyr1_cls_head_16hybridsequential0_conv0_fwd
% LAYER(085) is CONV(064), resnetv1pyr1_cls_head_16hybridsequential1_conv0_fwd
% LAYER(086) is CONV(065), resnetv1pyr1_cls_head_16hybridsequential2_conv0_fwd
% LAYER(087) is CONV(066), resnetv1pyr1_reg_head_4hybridsequential0_conv0_fwd
% LAYER(088) is CONV(067), resnetv1pyr1_reg_head_4hybridsequential1_conv0_fwd
% LAYER(089) is CONV(068), resnetv1pyr1_reg_head_4hybridsequential2_conv0_fwd
% LAYER(090) is CONV(069), resnetv1pyr1_reg_head_8hybridsequential0_conv0_fwd
% LAYER(091) is CONV(070), resnetv1pyr1_reg_head_8hybridsequential1_conv0_fwd
% LAYER(092) is CONV(071), resnetv1pyr1_reg_head_8hybridsequential2_conv0_fwd
% LAYER(093) is CONV(072), resnetv1pyr1_reg_head_16hybridsequential0_conv0_fwd
% LAYER(094) is CONV(073), resnetv1pyr1_reg_head_16hybridsequential1_conv0_fwd
% LAYER(095) is CONV(074), resnetv1pyr1_reg_head_16hybridsequential2_conv0_fwd



